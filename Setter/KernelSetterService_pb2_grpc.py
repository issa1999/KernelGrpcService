# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import Setter.KernelSetterService_pb2 as KernelSetterService__pb2


class SETTERStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.REMOVE_MODULE = channel.unary_unary(
                '/SETTER/REMOVE_MODULE',
                request_serializer=KernelSetterService__pb2.REQUEST.SerializeToString,
                response_deserializer=KernelSetterService__pb2.REPLY.FromString,
                )
        self.MODPROBE = channel.unary_unary(
                '/SETTER/MODPROBE',
                request_serializer=KernelSetterService__pb2.REQUEST.SerializeToString,
                response_deserializer=KernelSetterService__pb2.REPLY.FromString,
                )
        self.DEPLOY_MODULE = channel.unary_unary(
                '/SETTER/DEPLOY_MODULE',
                request_serializer=KernelSetterService__pb2.REQUEST.SerializeToString,
                response_deserializer=KernelSetterService__pb2.REPLY.FromString,
                )
        self.INSTALL_KERNEL_OBJECT = channel.unary_unary(
                '/SETTER/INSTALL_KERNEL_OBJECT',
                request_serializer=KernelSetterService__pb2.KERNEL_OBJECT.SerializeToString,
                response_deserializer=KernelSetterService__pb2.REPLY.FromString,
                )


class SETTERServicer(object):
    """Missing associated documentation comment in .proto file."""

    def REMOVE_MODULE(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MODPROBE(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DEPLOY_MODULE(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def INSTALL_KERNEL_OBJECT(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SETTERServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'REMOVE_MODULE': grpc.unary_unary_rpc_method_handler(
                    servicer.REMOVE_MODULE,
                    request_deserializer=KernelSetterService__pb2.REQUEST.FromString,
                    response_serializer=KernelSetterService__pb2.REPLY.SerializeToString,
            ),
            'MODPROBE': grpc.unary_unary_rpc_method_handler(
                    servicer.MODPROBE,
                    request_deserializer=KernelSetterService__pb2.REQUEST.FromString,
                    response_serializer=KernelSetterService__pb2.REPLY.SerializeToString,
            ),
            'DEPLOY_MODULE': grpc.unary_unary_rpc_method_handler(
                    servicer.DEPLOY_MODULE,
                    request_deserializer=KernelSetterService__pb2.REQUEST.FromString,
                    response_serializer=KernelSetterService__pb2.REPLY.SerializeToString,
            ),
            'INSTALL_KERNEL_OBJECT': grpc.unary_unary_rpc_method_handler(
                    servicer.INSTALL_KERNEL_OBJECT,
                    request_deserializer=KernelSetterService__pb2.KERNEL_OBJECT.FromString,
                    response_serializer=KernelSetterService__pb2.REPLY.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SETTER', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SETTER(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def REMOVE_MODULE(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SETTER/REMOVE_MODULE',
            KernelSetterService__pb2.REQUEST.SerializeToString,
            KernelSetterService__pb2.REPLY.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MODPROBE(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SETTER/MODPROBE',
            KernelSetterService__pb2.REQUEST.SerializeToString,
            KernelSetterService__pb2.REPLY.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DEPLOY_MODULE(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SETTER/DEPLOY_MODULE',
            KernelSetterService__pb2.REQUEST.SerializeToString,
            KernelSetterService__pb2.REPLY.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def INSTALL_KERNEL_OBJECT(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SETTER/INSTALL_KERNEL_OBJECT',
            KernelSetterService__pb2.KERNEL_OBJECT.SerializeToString,
            KernelSetterService__pb2.REPLY.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
